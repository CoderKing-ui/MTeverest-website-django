"Django Tutorial: include path for layout.html": {
	"prefix": "include_path",
	"body": [
		"{% include 'folder/index.html' %}"					
	],

	"description": "include path for layout.html"
},
"Django Tutorial: block content endblock for layout.html": {
	"prefix": "block_content_endblock",
	"body": [
		"{% block content %}{% endblock %}"					
	],

	"description": "block content endblock for layout.html"
},
"Django Tutorial: script static js for layout.html": {
	"prefix": "script_static_js",
	"body": [
		"<script src=\"{% static 'js/name.js' %}\"></script>"					
	],

	"description": "script static js for layout.html"
},
"Django Tutorial: link static css for layout.html": {
	"prefix": "link_static_css",
	"body": [
		"<link href=\"{% static 'css/name.css' %}\" rel=\"stylesheet\">"					
	],

	"description": "link static css for layout.html"
},
"Django Tutorial: load static for layout.html": {
	"prefix": "load_static",
	"body": [
		"{% load static %}"					
	],

	"description": "load static for layout.html"
},
"Django Tutorial: if_elif_else_endif for layout.html": {
	"prefix": "if_elif_else_endif",
	"body": [
		"{% if condition == ? %}",
		"$0",
		"{% elif condition == ? %}",
		"$1",
		"{% else %}",
		"$2",
		"{% endif %}"			
	],

	"description": "if_elif_else_endif for layout.html"
},
"Django Tutorial: if_else_endif for layout.html": {
	"prefix": "if_else_endif",
	"body": [
		"{% if condition == ? %}",
		"$0",
		"{% else %}",
		"$1",
		"{% endif %}"			
	],

	"description": "if_else_endif for layout.html"
},
"Django Tutorial: if_endif for layout.html": {
	"prefix": "if_endif",
	"body": [
		"{% if condition == ? %}",
		"$0",
		"{% endif %}"			
	],

	"description": "if_endif for layout.html"
},
"Django Tutorial: template extending layout.html": {
	"prefix": "block",
	"body": [
		"{% extends \"folder/layout.html\" %}",
		"{% block title %}",
		"$0",
		"{% endblock %}",
		"{% block content %}",
		"{% endblock %}"
	],

	"description": "Boilerplate template that extends layout.html"
},






{
	// Place your snippets for django-html here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}